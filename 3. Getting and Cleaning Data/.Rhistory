search()
install.packages(KernSmooth)
install.packages("KernSmooth")
library(KernSmooth)
?download.file
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url, destfile='community_survey_2006.csv', method='curl')
list.files()
setwd('./Documents/GitHub/datasciencecoursera/3. Getting and Cleaning Data/')
list.files()
df <- read.csv('community_survey_2006.csv')
df
df.head()
head(df)
names(df)
nrow(df)
df[df$VAL == 24]
df(df$VAL == 24)
df[df$VAL==24, ]
nrow(df[!is.na(df$VAL) && (df$VAL==24)])
nrow(df[df$VAL==24])
nrow(df[df$VAL==24,])
View(df)
?is.na
is.na(NA)
is.na(24)
nrow(df[df$VAL==25,])
nrow(df[is.na(df$VAL),])
nrow(df)
nrow(df[!is.na(df$VAL)])
nrow(df[!is.na(df$VAL),])
?[]
?[
has_val <- df[!is.na(df$VAL)]
has_val <- df[!is.na(df$VAL),]
nrow(has_val[has_val$VAL==24])
nrow(has_val[has_val$VAL==24,])
getwd()
print 'hello'
print('hello')
print('There are ', houses_above_a_million, ' houses above a million dollars.')
print('there are ', 5, ' people here')
?print
cat('there are', 5, 'peope')
source('Quiz1.R')
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx'
install.packages(xlsx)
install.packages('xlsx')
library(xlsx)
url
download.file(url, destfile='natural_gas_acquisition_program.xlsx')
dat <- read.xlsx('natural_gas_acquisition_program.xlsx', sheetIndex = 1)
head(dat)
dat <- read.xlsx('natural_gas_acquisition_program.xlsx', sheetIndex = 1, rowIndex = 18-23, colIndex = 7:15)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
sum(dat$Zip * dat$Ext,na.rm=T)
sum(as.numeric(dat$Zip) * as.numeric(dat$Ext),na.rm=T)
dat <- read.xlsx('natural_gas_acquisition_program.xlsx', sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
sum(as.numeric(dat$Zip) * as.numeric(dat$Ext),na.rm=T)
source('Quiz1.R')
install.packages('XML')
library(XML)
TRUE
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
doc <- xmlTreeParse(url, useInternal=TRUE)
?xmlTreeParse
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml'
filename <- 'baltimore_restaurants'
download.file(url, destfile=filename, method='curl')
doc <- xmlTreeParse(filename, useInternal=TRUE)
cat(doc)
doc
doc
getwd()
source('Quiz1.R')
install.packages('read.table')
version()
R.version
install.packages('read.table')
install.packages('data.table')
library(data.table)
url <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv'
filename <- 'housing_micro_survey_data_2006.csv'
# use method='curl' if on a Mac, skip it if on Windows
if (.Platform$OS.type == "windows") {
download.file(url, destfile=filename)
} else {
download.file(url, destfile=filename, method='curl')
}
url
filename
DT <- fread(filename)
DT
system.time(DT[,mean(pwgtp15),by=SEX])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]
rowMeans(DT)
?rowMeans
View(DT)
rowMeans(DT, na.rm=TRUE)
DT[DT$SEX==1][,'pwgtp15']
DT[DT$SEX==1]
url
csv <- read.csv(filename)
View(csv)
csv$pwgtp15
?rowMeans
c(4:1, 2:5)
x < cbind(x1=3, x2=c(4:1, 2:5))
x <- cbind(x1=3, x2=c(4:1, 2:5))
x
rowMeans(x)
DT[DT$SEX==1]
DT[DT$SEX==1][,'pwgtp15']
DT[DT$SEX==1][,c('pwgtp15')]
DT[DT$SEX==1,c('pwgtp15')]
rowMeans(DT)[DT$SEX==1]
class(DT)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
rowMeans(DT)[DT$SEX==1]
install.packages('RMySql')
install.packages('RMySQL')
library('RMySQL')
library(RMySQL)
ucscDB <- dbConnect(MySQL(), user='genome', host='genome-mysql.cse.ucsc.edu')
result <- dbGetQuery(ucscDB, "show databases;")
dbDisconnect(ucscDB)
result
hg19 <- dbConnect(MySQL(), user='genome', db=)
hg19 <- dbConnect(MySQL(), user='genome', db='hg19', host='genome-mysql.cse.ucsc.edu')
allTables <- dbListTables(hq19)
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, 'affyU133Plus2')
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery(hg19, "select * from 'affyU133Plus2' where misMatches between 1 and 3)
""
)
c
))))
q
?
query <- dbSendQuery(hg19, "select * from 'affyU133Plus2' where misMatches between 1 and 3")
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where misMatches between 1 and 3")
affyMis <- fetch(query)
quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n=10)
affyMisSmall
ddbClearResult(query)
dbClearResult(query)
dim(affyMisSmall)
dbDisconnect(hg19)
source('http://bioconductor.org/biocLite.R')
biocLite('rhdf5')
library(rhdf5)
created = h5createFile('example.h5')
created
created = h5createGroup('example.h5', 'foo')
created = h5createGroup('example.h5', 'baa')
created = h5createGroup('example.h5', 'foo/foobaa')
h5ls('example.h5')
A = matrix(1:10, nr=5, nc=2)
A
h5write(A, 'example.h5', 'foo/A')
B = array(seq(0.1, 2.0, by=0.1), dim=c(5,2,2))
B
attr(B, "scale") <- "liter"
h5write(B, 'example.h5', 'foo/foobaa/B')
h5ls('example.h5')
source('Quiz1.R')
source('Quiz1.R')
df = data.frame(1L:5L, seq(0, 1, length.out = 5),
c('ab', 'cde', 'fghi', 'a', 's'), stringsAsFactors=FALSE)
df
?"data.frame"
h5write(df, 'example.h5', 'df')
h5ls('example.h5')
readA = h5read('example.h5', 'foo/A')
readB = h5read('example.h5', 'foo/foobaa/B')
readdf = h5read('example.h5', 'df')
readA
readB
readdf
h5read('example.h5', 'foo/A')
h5read('example.h5', 'foo/A', index = list(1:3, 1))
list(1:3, 1)
